select(sess_id, contains("bfi")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "target", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study1, replacing the raw data
study1 <-
psych::scoreItems(big6_keys,
items = study1_big6_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study1_big6_long, .) %>%
gather(variable, rating, -(1:3)) %>%
unite(variable, perceiver, target, variable) %>%
spread(variable, rating) %>%
select(sess_id,
ends_with("agreeableness"),
ends_with("conscientiousness"),
ends_with("hp"),
ends_with("neuroticism"),
ends_with("extraversion"),
ends_with("openness")) %>%
right_join(study1)
library(kableExtra)
study1_big6_long %>%
mutate(rating_type = case_when(perceiver == target ~ "Self",
perceiver == "A" & target == "C" |
perceiver == "C" & target == "A" ~ "P1",
perceiver == "B" & target == "C" |
perceiver == "D" & target == "A" ~ "P2")) %>%
split(.$rating_type) %>%
map_df(~ psych::scoreItems(big6_keys,
items = .,
impute = "none") %>% pluck("alpha")) %>%
mutate(domain = names(big6_keys),
domain = ifelse(domain == "hp", "honesty-propriety", domain)) %>%
gather(report, alpha, -domain) %>%
mutate(report = fct_relevel(report,
"Self",
"P1",
"P2")) %>%
select(report, domain, alpha) %>%
arrange(report) %>%
knitr::kable(digits = c(NA, NA, 2),
caption = "Coefficient Alphas for Big Six Ratings Study 1",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
iri_keys <- list(
iri_empathic = c("q2_emp", "-q4_emp", "q9_emp", "-q14_emp", "-q18_emp", "q20_emp", "q22_emp"),
iri_fantasy = c("q1_fs", "q5_fs", "-q7_fs", "-q12_fs", "q16_fs", "q23_fs", "q26_fs"),
iri_distress = c("q6_pd", "q10_pd", "-q13_pd", "q17_pd", "-q19_pd", "q24_pd", "q27_pd"),
iri_perspective = c("-q3_pt", "q8_pt", "q11_pt", "-q15_pt", "q21_pt", "q25_pt", "q28_pt")
)
# Lengthen Data
study1_iri_long <-
study1 %>%
select(sess_id, starts_with("B_q"), starts_with("D_q")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study1, replacing the raw data
study1 <-
psych::scoreItems(iri_keys,
items = study1_iri_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study1_iri_long, .) %>%
gather(variable, rating, -(1:2)) %>%
unite(variable, perceiver, variable) %>%
spread(variable, rating) %>%
select(sess_id, contains("iri")) %>%
right_join(study1)
library(kableExtra)
psych::scoreItems(iri_keys,
items = study1_iri_long,
impute = "none") %>%
.[["alpha"]] %>%
as_tibble() %>%
gather(subscale, alpha) %>%
mutate(subscale =
case_when(subscale == "iri_empathic" ~ "empathic concern",
subscale == "iri_fantasy" ~ "fantasy",
subscale == "iri_distress" ~ "distress tolerance",
subscale == "iri_perspective" ~ "perspective taking")) %>%
knitr::kable(digits = c(NA, 2),
caption = "Coefficient Alphas for Perspective Taking Study 1",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
# Lengthen Data
study2_big6_long <-
study2 %>%
select(sess_id, contains("bfi")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "target", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study2, replacing the raw data
study2 <-
psych::scoreItems(big6_keys,
items = study2_big6_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study2_big6_long, .) %>%
gather(variable, rating, -(1:3)) %>%
unite(variable, perceiver, target, variable) %>%
spread(variable, rating) %>%
select(sess_id,
ends_with("agreeableness"),
ends_with("conscientiousness"),
ends_with("hp"),
ends_with("neuroticism"),
ends_with("extraversion"),
ends_with("openness")) %>%
right_join(study2)
library(kableExtra)
study2_big6_long %>%
mutate(rating_type = case_when(perceiver == target ~ "Self",
perceiver == "A" & target == "C" |
perceiver == "C" & target == "A" ~ "P1",
perceiver == "B" & target == "C" |
perceiver == "D" & target == "A" ~ "P2")) %>%
split(.$rating_type) %>%
map_df(~ psych::scoreItems(big6_keys,
items = .,
qwraps2::lazyload_cache_dir("Z:/lab/Reputation Project/Analyses/Perc_thru_grapevine_2019/perceiving_through_grapevine_2019_R-R_cache/html")
anova(integrated_accuracy_sam_combined_studyref,
integrated_accuracy_sam_combined) %>%
summarize(delta_aic = aic - lag(aic))
library(tidyverse)
anova(integrated_accuracy_sam_combined_studyref,
integrated_accuracy_sam_combined) %>% summarize(delta_aic = aic - lag(aic))
summary(integrated_accuracy_sam_combined_studyref)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, cache = TRUE)
# Make sure necessary packages are installed
if("rio" %in% installed.packages()[,1] == FALSE){install.packages("rio")}
if("magrittr" %in% installed.packages()[,1] == FALSE){install.packages("tidyverse")}
if("ReputationModelR" %in% installed.packages()[,1] == FALSE){devtools::install_github("Coryc3133/ReputationModelR")}
if("lme4" %in% installed.packages()[,1] == FALSE){install.packages("lme4")}
if("lmerTest" %in% installed.packages()[,1] == FALSE){install.packages("lmerTest")}
if("broom.mixed" %in% installed.packages()[,1] == FALSE){install.packages("broom.mixed")}
library(rio)
library(tidyverse)
library(ReputationModelR)
library(lme4)
library(lmerTest)
study1 <- import("Data/rep_s1_4ms.csv")
study2 <- import("Data/rep_s2_4ms.csv") %>%
# missing condition are "", but need to be NA
mutate(condition = ifelse(condition == "", NA, condition))
item_pos <- import("Data/rep_BigSix_Evaluativeness.csv")
anova(integrated_accuracy_sam_combined_studyref,
integrated_accuracy_sam_combined)
integrated_accuracy_sam_combined_studyref
integrated_accuracy_sam_combined
anova(integrated_accuracy_sam_combined_studyref,
integrated_accuracy_sam_combined)
qwraps2::lazyload_cache_dir("./perceiving_through_grapevine_2019_R-R_cache/html")
study1_consensus_sam %>% broom.mixed::tidy(effects = "fixed", conf.int = TRUE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, cache = TRUE)
# Make sure necessary packages are installed
if("rio" %in% installed.packages()[,1] == FALSE){install.packages("rio")}
if("magrittr" %in% installed.packages()[,1] == FALSE){install.packages("tidyverse")}
if("ReputationModelR" %in% installed.packages()[,1] == FALSE){devtools::install_github("Coryc3133/ReputationModelR")}
if("lme4" %in% installed.packages()[,1] == FALSE){install.packages("lme4")}
if("lmerTest" %in% installed.packages()[,1] == FALSE){install.packages("lmerTest")}
if("broom.mixed" %in% installed.packages()[,1] == FALSE){install.packages("broom.mixed")}
library(rio)
library(tidyverse)
library(ReputationModelR)
library(lme4)
library(lmerTest)
study1 <- import("Data/rep_s1_4ms.csv")
study2 <- import("Data/rep_s2_4ms.csv") %>%
# missing condition are "", but need to be NA
mutate(condition = ifelse(condition == "", NA, condition))
item_pos <- import("Data/rep_BigSix_Evaluativeness.csv")
study1_consensus_sam %>%
broom.mixed::tidy(effects = "fixed", conf.int = TRUE)
fixed_coefs_tbl <- function(model){
model %>%
broom.mixed::tidy(effects = "fixed", conf.int = TRUE) %>%
transmute(
term = term,
est = estimate,
ci_ll = conf.low,
ci_ul = conf.high,
se = std.error,
t = statistic,
df = df,
p = p.value,
) %>%
mutate(std_est = c(0, lm_beta_lmer(model)),
p = ifelse(p > .001, round(p, 3), "<.001"),
component = case_when(
term == "(Intercept)" ~ "-",
term == "self_norm" ~ "Normative Accuracy",
term == "self_dist" ~ "Distinctive Accuracy",
term == "p1_norm" ~ "Normative Consensus",
term == "p1_dist" ~ "Distinctive Consensus",
term == "pos" ~ "Positivity Bias",
term == "distancep2" ~ "-",
term == "self_norm:distancep2" ~ "Distance X Normative Accuracy",
term == "self_dist:distancep2" ~ "Distance X Distinctive Accuracy",
term == "pos:distancep2" ~ "Distance X Positivity Bias",
# extraversion moderators
term == "t_ext_cent" ~ "Target Extraversion",
term == "p1_norm:t_ext_cent" ~ "Target Extraversion X Normative Consensus",
term == "p1_dist:t_ext_cent" ~ "Target Extraversion X Distinctive Consensus",
term == "pos:t_ext_cent" ~ "Target Extraversion X Positivity Bias",
term == "t_ext_cent" ~ "Target Extraversion",
term == "self_norm:t_ext_cent" ~ "Target Extraversion X Normative Accuracy",
term == "self_dist:t_ext_cent" ~ "Target Extraversion X Distinctive Accuracy",
term == "pos:t_ext_cent" ~ "Target Extraversion X Positivity Bias",
term == "p1_ext_cent" ~ "P1 Extraversion",
term == "p1_norm:p1_ext_cent" ~ "P1 Extraversion X Normative Consensus",
term == "p1_dist:p1_ext_cent" ~ "P1 Extraversion X Distinctive Consensus",
term == "pos:p1_ext_cent" ~ "P1 Extraversion X Positivity Bias",
term == "p1_ext_cent" ~ "P1 Extraversion",
term == "self_norm:p1_ext_cent" ~ "P1 Extraversion X Normative Accuracy",
term == "self_dist:p1_ext_cent" ~ "P1 Extraversion X Distinctive Accuracy",
term == "pos:p1_ext_cent" ~ "P1 Extraversion X Positivity Bias",
term == "p2_ext_cent" ~ "P2 Extraversion",
term == "p1_norm:p2_ext_cent" ~ "P2 Extraversion X Normative Consensus",
term == "p1_dist:p2_ext_cent" ~ "P2 Extraversion X Distinctive Consensus",
term == "pos:p2_ext_cent" ~ "P2 Extraversion X Positivity Bias",
term == "p2_ext_cent" ~ "P2 Extraversion",
term == "self_norm:p2_ext_cent" ~ "P2 Extraversion X Normative Accuracy",
term == "self_dist:p2_ext_cent" ~ "P2 Extraversion X Distinctive Accuracy",
term == "pos:p2_ext_cent" ~ "P2 Extraversion X Positivity Bias",
# empathy moderators
term == "distress_cent" ~ "P2 Distress",
term == "p1_norm:distress_cent" ~ "P2 Distress X Normative Consensus",
term == "p1_dist:distress_cent" ~ "P2 Distress X Distinctive Consensus",
term == "pos:distress_cent" ~ "P2 Distress X Positivity Bias",
term == "distress_cent" ~ "P2 Distress",
term == "self_norm:distress_cent" ~ "P2 Distress X Normative Accuracy",
term == "self_dist:distress_cent" ~ "P2 Distress X Distinctive Accuracy",
term == "pos:distress_cent" ~ "P2 Distress X Positivity Bias",
term == "fantasy_cent" ~ "P2 Fantasy",
term == "p1_norm:fantasy_cent" ~ "P2 Fantasy X Normative Consensus",
term == "p1_dist:fantasy_cent" ~ "P2 Fantasy X Distinctive Consensus",
term == "pos:fantasy_cent" ~ "P2 Fantasy X Positivity Bias",
term == "fantasy_cent" ~ "P2 Fantasy",
term == "self_norm:fantasy_cent" ~ "P2 Fantasy X Normative Accuracy",
term == "self_dist:fantasy_cent" ~ "P2 Fantasy X Distinctive Accuracy",
term == "pos:fantasy_cent" ~ "P2 Fantasy X Positivity Bias",
term == "empathic_cent" ~ "P2 Empathic Concern",
term == "p1_norm:empathic_cent" ~ "P2 Empathic Concern X Normative Consensus",
term == "p1_dist:empathic_cent" ~ "P2 Empathic Concern X Distinctive Consensus",
term == "pos:empathic_cent" ~ "P2 Empathic Concern X Positivity Bias",
term == "empathic_cent" ~ "P2 Empathic Concern",
term == "self_norm:empathic_cent" ~ "P2 Empathic Concern X Normative Accuracy",
term == "self_dist:empathic_cent" ~ "P2 Empathic Concern X Distinctive Accuracy",
term == "pos:empathic_cent" ~ "P2 Empathic Concern X Positivity Bias",
term == "perspective_cent" ~ "P2 Perspective Taking",
term == "p1_norm:perspective_cent" ~ "P2 Perspective Taking X Normative Consensus",
term == "p1_dist:perspective_cent" ~ "P2 Perspective Taking X Distinctive Consensus",
term == "pos:perspective_cent" ~ "P2 Perspective Taking X Positivity Bias",
term == "perspective_cent" ~ "P2 Perspective Taking",
term == "self_norm:perspective_cent" ~ "P2 Perspective Taking X Normative Accuracy",
term == "self_dist:perspective_cent" ~ "P2 Perspective Taking X Distinctive Accuracy",
term == "pos:perspective_cent" ~ "P2 Perspective Taking X Positivity Bias"),
term = case_when(
term == "(Intercept)" ~ "$\\gamma_{000}$",
term == "self_norm" ~ "$\\gamma_{100}$",
term == "self_dist" ~ "$\\gamma_{200}$",
term == "p1_norm" ~ "$\\gamma_{100}$",
term == "p1_dist" ~ "$\\gamma_{200}$",
term == "pos" ~ "$\\gamma_{300}$",
term == "distancep2" ~ "$\\gamma_{010}$",
term == "self_norm:distancep2" ~ "$\\gamma_{110}$",
term == "self_dist:distancep2" ~ "$\\gamma_{210}$",
term == "pos:distancep2" ~ "$\\gamma_{310}$",
# extraversion moderators
term == "t_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:t_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:t_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:t_ext_cent" ~ "$\\gamma_{310}$",
term == "t_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:t_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:t_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:t_ext_cent" ~ "$\\gamma_{310}$",
term == "p1_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:p1_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:p1_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p1_ext_cent" ~ "$\\gamma_{310}$",
term == "p1_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:p1_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:p1_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p1_ext_cent" ~ "$\\gamma_{310}$",
term == "p2_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:p2_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:p2_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p2_ext_cent" ~ "$\\gamma_{310}$",
term == "p2_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:p2_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:p2_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p2_ext_cent" ~ "$\\gamma_{310}$",
# empathy moderators
term == "distress_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:distress_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:distress_cent" ~ "$\\gamma_{210}$",
term == "pos:distress_cent" ~ "$\\gamma_{310}$",
term == "distress_cent" ~ "$\\gamma_{010}$",
term == "self_norm:distress_cent" ~ "$\\gamma_{110}$",
term == "self_dist:distress_cent" ~ "$\\gamma_{210}$",
term == "pos:distress_cent" ~ "$\\gamma_{310}$",
term == "fantasy_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:fantasy_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:fantasy_cent" ~ "$\\gamma_{210}$",
term == "pos:fantasy_cent" ~ "$\\gamma_{310}$",
term == "fantasy_cent" ~ "$\\gamma_{010}$",
term == "self_norm:fantasy_cent" ~ "$\\gamma_{110}$",
term == "self_dist:fantasy_cent" ~ "$\\gamma_{210}$",
term == "pos:fantasy_cent" ~ "$\\gamma_{310}$",
term == "empathic_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:empathic_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:empathic_cent" ~ "$\\gamma_{210}$",
term == "pos:empathic_cent" ~ "$\\gamma_{310}$",
term == "empathic_cent" ~ "$\\gamma_{010}$",
term == "self_norm:empathic_cent" ~ "$\\gamma_{110}$",
term == "self_dist:empathic_cent" ~ "$\\gamma_{210}$",
term == "pos:empathic_cent" ~ "$\\gamma_{310}$",
term == "perspective_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:perspective_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:perspective_cent" ~ "$\\gamma_{210}$",
term == "pos:perspective_cent" ~ "$\\gamma_{310}$",
term == "perspective_cent" ~ "$\\gamma_{010}$",
term == "self_norm:perspective_cent" ~ "$\\gamma_{110}$",
term == "self_dist:perspective_cent" ~ "$\\gamma_{210}$",
term == "pos:perspective_cent" ~ "$\\gamma_{310}$"
))%>%
select(term, component, est, se, t, df, p, std_est) %>%
knitr::kable(digits = c(NA, NA, 2, 2, 2, 2, 3, 2)) %>%
kableExtra::kable_styling("striped", full_width = F)
}
study1_consensus_sam %>%
fixed_coefs_tbl()
term == "(Intercept)" ~ "-",
fixed_coefs_tbl <- function(model){
model %>%
broom.mixed::tidy(effects = "fixed", conf.int = TRUE) %>%
transmute(
term = term,
est = estimate,
ci_ll = conf.low,
ci_ul = conf.high,
se = std.error,
t = statistic,
df = df,
p = p.value,
) %>%
mutate(std_est = c(0, lm_beta_lmer(model)),
p = ifelse(p > .001, round(p, 3), "<.001"),
component = case_when(
term == "(Intercept)" ~ "-",
term == "self_norm" ~ "Normative Accuracy",
term == "self_dist" ~ "Distinctive Accuracy",
term == "p1_norm" ~ "Normative Consensus",
term == "p1_dist" ~ "Distinctive Consensus",
term == "pos" ~ "Positivity Bias",
term == "distancep2" ~ "-",
term == "self_norm:distancep2" ~ "Distance X Normative Accuracy",
term == "self_dist:distancep2" ~ "Distance X Distinctive Accuracy",
term == "pos:distancep2" ~ "Distance X Positivity Bias",
# extraversion moderators
term == "t_ext_cent" ~ "Target Extraversion",
term == "p1_norm:t_ext_cent" ~ "Target Extraversion X Normative Consensus",
term == "p1_dist:t_ext_cent" ~ "Target Extraversion X Distinctive Consensus",
term == "pos:t_ext_cent" ~ "Target Extraversion X Positivity Bias",
term == "t_ext_cent" ~ "Target Extraversion",
term == "self_norm:t_ext_cent" ~ "Target Extraversion X Normative Accuracy",
term == "self_dist:t_ext_cent" ~ "Target Extraversion X Distinctive Accuracy",
term == "pos:t_ext_cent" ~ "Target Extraversion X Positivity Bias",
term == "p1_ext_cent" ~ "P1 Extraversion",
term == "p1_norm:p1_ext_cent" ~ "P1 Extraversion X Normative Consensus",
term == "p1_dist:p1_ext_cent" ~ "P1 Extraversion X Distinctive Consensus",
term == "pos:p1_ext_cent" ~ "P1 Extraversion X Positivity Bias",
term == "p1_ext_cent" ~ "P1 Extraversion",
term == "self_norm:p1_ext_cent" ~ "P1 Extraversion X Normative Accuracy",
term == "self_dist:p1_ext_cent" ~ "P1 Extraversion X Distinctive Accuracy",
term == "pos:p1_ext_cent" ~ "P1 Extraversion X Positivity Bias",
term == "p2_ext_cent" ~ "P2 Extraversion",
term == "p1_norm:p2_ext_cent" ~ "P2 Extraversion X Normative Consensus",
term == "p1_dist:p2_ext_cent" ~ "P2 Extraversion X Distinctive Consensus",
term == "pos:p2_ext_cent" ~ "P2 Extraversion X Positivity Bias",
term == "p2_ext_cent" ~ "P2 Extraversion",
term == "self_norm:p2_ext_cent" ~ "P2 Extraversion X Normative Accuracy",
term == "self_dist:p2_ext_cent" ~ "P2 Extraversion X Distinctive Accuracy",
term == "pos:p2_ext_cent" ~ "P2 Extraversion X Positivity Bias",
# empathy moderators
term == "distress_cent" ~ "P2 Distress",
term == "p1_norm:distress_cent" ~ "P2 Distress X Normative Consensus",
term == "p1_dist:distress_cent" ~ "P2 Distress X Distinctive Consensus",
term == "pos:distress_cent" ~ "P2 Distress X Positivity Bias",
term == "distress_cent" ~ "P2 Distress",
term == "self_norm:distress_cent" ~ "P2 Distress X Normative Accuracy",
term == "self_dist:distress_cent" ~ "P2 Distress X Distinctive Accuracy",
term == "pos:distress_cent" ~ "P2 Distress X Positivity Bias",
term == "fantasy_cent" ~ "P2 Fantasy",
term == "p1_norm:fantasy_cent" ~ "P2 Fantasy X Normative Consensus",
term == "p1_dist:fantasy_cent" ~ "P2 Fantasy X Distinctive Consensus",
term == "pos:fantasy_cent" ~ "P2 Fantasy X Positivity Bias",
term == "fantasy_cent" ~ "P2 Fantasy",
term == "self_norm:fantasy_cent" ~ "P2 Fantasy X Normative Accuracy",
term == "self_dist:fantasy_cent" ~ "P2 Fantasy X Distinctive Accuracy",
term == "pos:fantasy_cent" ~ "P2 Fantasy X Positivity Bias",
term == "empathic_cent" ~ "P2 Empathic Concern",
term == "p1_norm:empathic_cent" ~ "P2 Empathic Concern X Normative Consensus",
term == "p1_dist:empathic_cent" ~ "P2 Empathic Concern X Distinctive Consensus",
term == "pos:empathic_cent" ~ "P2 Empathic Concern X Positivity Bias",
term == "empathic_cent" ~ "P2 Empathic Concern",
term == "self_norm:empathic_cent" ~ "P2 Empathic Concern X Normative Accuracy",
term == "self_dist:empathic_cent" ~ "P2 Empathic Concern X Distinctive Accuracy",
term == "pos:empathic_cent" ~ "P2 Empathic Concern X Positivity Bias",
term == "perspective_cent" ~ "P2 Perspective Taking",
term == "p1_norm:perspective_cent" ~ "P2 Perspective Taking X Normative Consensus",
term == "p1_dist:perspective_cent" ~ "P2 Perspective Taking X Distinctive Consensus",
term == "pos:perspective_cent" ~ "P2 Perspective Taking X Positivity Bias",
term == "perspective_cent" ~ "P2 Perspective Taking",
term == "self_norm:perspective_cent" ~ "P2 Perspective Taking X Normative Accuracy",
term == "self_dist:perspective_cent" ~ "P2 Perspective Taking X Distinctive Accuracy",
term == "pos:perspective_cent" ~ "P2 Perspective Taking X Positivity Bias"),
term = case_when(
term == "(Intercept)" ~ "$\\gamma_{000}$",
term == "self_norm" ~ "$\\gamma_{100}$",
term == "self_dist" ~ "$\\gamma_{200}$",
term == "p1_norm" ~ "$\\gamma_{100}$",
term == "p1_dist" ~ "$\\gamma_{200}$",
term == "pos" ~ "$\\gamma_{300}$",
term == "distancep2" ~ "$\\gamma_{010}$",
term == "self_norm:distancep2" ~ "$\\gamma_{110}$",
term == "self_dist:distancep2" ~ "$\\gamma_{210}$",
term == "pos:distancep2" ~ "$\\gamma_{310}$",
# extraversion moderators
term == "t_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:t_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:t_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:t_ext_cent" ~ "$\\gamma_{310}$",
term == "t_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:t_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:t_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:t_ext_cent" ~ "$\\gamma_{310}$",
term == "p1_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:p1_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:p1_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p1_ext_cent" ~ "$\\gamma_{310}$",
term == "p1_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:p1_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:p1_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p1_ext_cent" ~ "$\\gamma_{310}$",
term == "p2_ext_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:p2_ext_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:p2_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p2_ext_cent" ~ "$\\gamma_{310}$",
term == "p2_ext_cent" ~ "$\\gamma_{010}$",
term == "self_norm:p2_ext_cent" ~ "$\\gamma_{110}$",
term == "self_dist:p2_ext_cent" ~ "$\\gamma_{210}$",
term == "pos:p2_ext_cent" ~ "$\\gamma_{310}$",
# empathy moderators
term == "distress_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:distress_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:distress_cent" ~ "$\\gamma_{210}$",
term == "pos:distress_cent" ~ "$\\gamma_{310}$",
term == "distress_cent" ~ "$\\gamma_{010}$",
term == "self_norm:distress_cent" ~ "$\\gamma_{110}$",
term == "self_dist:distress_cent" ~ "$\\gamma_{210}$",
term == "pos:distress_cent" ~ "$\\gamma_{310}$",
term == "fantasy_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:fantasy_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:fantasy_cent" ~ "$\\gamma_{210}$",
term == "pos:fantasy_cent" ~ "$\\gamma_{310}$",
term == "fantasy_cent" ~ "$\\gamma_{010}$",
term == "self_norm:fantasy_cent" ~ "$\\gamma_{110}$",
term == "self_dist:fantasy_cent" ~ "$\\gamma_{210}$",
term == "pos:fantasy_cent" ~ "$\\gamma_{310}$",
term == "empathic_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:empathic_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:empathic_cent" ~ "$\\gamma_{210}$",
term == "pos:empathic_cent" ~ "$\\gamma_{310}$",
term == "empathic_cent" ~ "$\\gamma_{010}$",
term == "self_norm:empathic_cent" ~ "$\\gamma_{110}$",
term == "self_dist:empathic_cent" ~ "$\\gamma_{210}$",
term == "pos:empathic_cent" ~ "$\\gamma_{310}$",
term == "perspective_cent" ~ "$\\gamma_{010}$",
term == "p1_norm:perspective_cent" ~ "$\\gamma_{110}$",
term == "p1_dist:perspective_cent" ~ "$\\gamma_{210}$",
term == "pos:perspective_cent" ~ "$\\gamma_{310}$",
term == "perspective_cent" ~ "$\\gamma_{010}$",
term == "self_norm:perspective_cent" ~ "$\\gamma_{110}$",
term == "self_dist:perspective_cent" ~ "$\\gamma_{210}$",
term == "pos:perspective_cent" ~ "$\\gamma_{310}$"
))%>%
select(term, component, est, ci_ll, ci_ul, se, t, df, p, std_est) %>%
knitr::kable(digits = c(NA, NA, 2, 2, 2, 2, 3, 2)) %>%
kableExtra::kable_styling("striped", full_width = F)
}
study1_consensus_sam %>%
fixed_coefs_tbl()
?sjPlot
?sjPlot::tab_model
unlink('perceiving_through_grapevine_2019_R-R_cache', recursive = TRUE)
