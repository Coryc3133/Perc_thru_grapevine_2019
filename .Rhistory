select(sess_id, ends_with("extraversion")) %>%
gather(var, t_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "A" & target == "C" |
perceiver == "C" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(t_ext_cent = t_ext - mean(t_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, t_ext_cent) %>%
right_join(study1_profiles)
study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, p1_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "A" & target == "C" |
perceiver == "C" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(p1_ext_cent = p1_ext - mean(p1_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, p1_ext_cent)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, cache = TRUE)
# Make sure necessary packages are installed
if("rio" %in% installed.packages()[,1] == FALSE){install.packages("rio")}
if("magrittr" %in% installed.packages()[,1] == FALSE){install.packages("tidyverse")}
if("ReputationModelR" %in% installed.packages()[,1] == FALSE){devtools::install_github("Coryc3133/ReputationModelR")}
if("lme4" %in% installed.packages()[,1] == FALSE){install.packages("lme4")}
if("lmerTest" %in% installed.packages()[,1] == FALSE){install.packages("lmerTest")}
library(rio)
library(tidyverse)
library(ReputationModelR)
library(lme4)
library(lmerTest)
study1 <- import("Data/rep_s1_4ms.csv")
study2 <- import("Data/rep_s2_4ms.csv") %>%
# missing condition are "", but need to be NA
mutate(condition = ifelse(condition == "", NA, condition))
item_eval <- import("Data/rep_BigSix_evaluativeness.csv")
study1_profiles <-
study1 %>%
select(sess_id, contains("bfi")) %>%
gather(var, rating, -sess_id) %>%
separate(var, c("perceiver", "target", "item"), extra = "merge") %>%
filter(target == "A" | target == "C") %>%
mutate(triad_id =
case_when(target == "A" ~ "ACD",
target == "C" ~ "CAB"),
rating_type =
case_when(perceiver == target ~ "self",
perceiver == "B" ~ "p2",
perceiver == "D" ~ "p2",
TRUE ~ "p1")) %>%
select(sess_id, triad_id, item, rating_type, rating) %>%
spread(rating_type, rating) %>%
group_by(item) %>%
mutate(., # center at midpoint
p1 = p1 - 3,
p2 = p2 -  3,
self = self - 3,
self_norm = mean(self, na.rm = TRUE),
self_dist = self - self_norm,
p1_norm = mean(p1, na.rm = TRUE),
p1_dist = p1 - p1_norm)
study2_profiles <-
study2 %>%
select(sess_id, contains("bfi")) %>%
gather(var, rating, -sess_id) %>%
separate(var, c("perceiver", "target", "item"), extra = "merge") %>%
filter(target == "A" | target == "C") %>%
mutate(triad_id =
case_when(target == "A" ~ "ACD",
target == "C" ~ "CAB"),
rating_type =
case_when(perceiver == target ~ "self",
perceiver == "B" ~ "p2",
perceiver == "D" ~ "p2",
TRUE ~ "p1")) %>%
select(sess_id, triad_id, item, rating_type, rating) %>%
spread(rating_type, rating) %>%
group_by(item) %>%
mutate(., # center at midpoint
p1 = p1 - 3,
p2 = p2 -  3,
self = self - 3,
self_norm = mean(self, na.rm = TRUE),
self_dist = self - self_norm,
p1_norm = mean(p1, na.rm = TRUE),
p1_dist = p1 - p1_norm)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, cache = TRUE)
# Make sure necessary packages are installed
if("rio" %in% installed.packages()[,1] == FALSE){install.packages("rio")}
if("magrittr" %in% installed.packages()[,1] == FALSE){install.packages("tidyverse")}
if("ReputationModelR" %in% installed.packages()[,1] == FALSE){devtools::install_github("Coryc3133/ReputationModelR")}
if("lme4" %in% installed.packages()[,1] == FALSE){install.packages("lme4")}
if("lmerTest" %in% installed.packages()[,1] == FALSE){install.packages("lmerTest")}
library(rio)
library(tidyverse)
library(ReputationModelR)
library(lme4)
library(lmerTest)
study1 <- import("Data/rep_s1_4ms.csv")
study2 <- import("Data/rep_s2_4ms.csv") %>%
# missing condition are "", but need to be NA
mutate(condition = ifelse(condition == "", NA, condition))
item_eval <- import("Data/rep_BigSix_evaluativeness.csv")
study1_profiles <-
study1 %>%
select(sess_id, contains("bfi")) %>%
gather(var, rating, -sess_id) %>%
separate(var, c("perceiver", "target", "item"), extra = "merge") %>%
filter(target == "A" | target == "C") %>%
mutate(triad_id =
case_when(target == "A" ~ "ACD",
target == "C" ~ "CAB"),
rating_type =
case_when(perceiver == target ~ "self",
perceiver == "B" ~ "p2",
perceiver == "D" ~ "p2",
TRUE ~ "p1")) %>%
select(sess_id, triad_id, item, rating_type, rating) %>%
spread(rating_type, rating) %>%
group_by(item) %>%
mutate(., # center at midpoint
p1 = p1 - 3,
p2 = p2 -  3,
self = self - 3,
self_norm = mean(self, na.rm = TRUE),
self_dist = self - self_norm,
p1_norm = mean(p1, na.rm = TRUE),
p1_dist = p1 - p1_norm)
study2_profiles <-
study2 %>%
select(sess_id, contains("bfi")) %>%
gather(var, rating, -sess_id) %>%
separate(var, c("perceiver", "target", "item"), extra = "merge") %>%
filter(target == "A" | target == "C") %>%
mutate(triad_id =
case_when(target == "A" ~ "ACD",
target == "C" ~ "CAB"),
rating_type =
case_when(perceiver == target ~ "self",
perceiver == "B" ~ "p2",
perceiver == "D" ~ "p2",
TRUE ~ "p1")) %>%
select(sess_id, triad_id, item, rating_type, rating) %>%
spread(rating_type, rating) %>%
group_by(item) %>%
mutate(., # center at midpoint
p1 = p1 - 3,
p2 = p2 -  3,
self = self - 3,
self_norm = mean(self, na.rm = TRUE),
self_dist = self - self_norm,
p1_norm = mean(p1, na.rm = TRUE),
p1_dist = p1 - p1_norm)
integrated_profiles <-
rbind(study1_profiles, study2_profiles)
item_eval %>%
t() %>%
psych::ICC()
item_eval_prof <- item_eval %>%
gather(item, rating, -subj) %>%
# mid-point center it
mutate(rating = rating - 3) %>%
group_by(item) %>%
summarize(eval = mean(rating, na.rm = TRUE)) %>%
mutate(item = str_to_lower(item),
item = str_replace_all(item, "bfie_", "bfi_"))
# study 1
study1_profiles <- study1_profiles %>%
left_join(item_eval_prof)
# study 2
study2_profiles <- study2_profiles %>%
left_join(item_eval_prof)
# integrated
study2_profiles <- study2_profiles %>%
left_join(item_eval_prof)
# Make keys
big6_keys <- list(
agreeableness = c("bfi_2", "bfi_7", "-bfi_12", "-bfi_17",
"-bfi_22", "bfi_27", "bfi_32", "-bfi_37",
"-bfi_42", "-bfi_47", "bfi_52", "bfi_57"),
conscientiousness = c("-bfi_3", "-bfi_8", "bfi_13", "bfi_18",
"-bfi_23", "-bfi_28", "bfi_33", "bfi_38",
"bfi_43", "-bfi_48", "bfi_53", "-bfi_58"),
hp = c("-bfi_hp45", "-bfi_hp46", "-bfi_hp47", "-bfi_hp48",
"-bfi_hp49", "bfi_hp50", "bfi_hp51", "bfi_hp52"),
neuroticism = c("-bfi_4", "-bfi_9", "bfi_14", "bfi_19",
"-bfi_24", "-bfi_29", "bfi_34", "bfi_39",
"-bfi_44", "-bfi_49", "bfi_54", "bfi_59"),
extraversion = c("bfi_1", "bfi_6", "-bfi_11", "-bfi_16",
"bfi_21", "-bfi_26", "-bfi_31", "-bfi_36",
"bfi_41", "bfi_46", "-bfi_51", "bfi_56"),
openness = c("-bfi_5", "bfi_10", "bfi_15", "bfi_20",
"-bfi_25", "-bfi_30", "bfi_35", "bfi_40",
"-bfi_45", "-bfi_50", "-bfi_55", "bfi_60"))
# Lengthen Data
study1_big6_long <-
study1 %>%
select(sess_id, contains("bfi")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "target", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study1, replacing the raw data
study1 <-
psych::scoreItems(big6_keys,
items = study1_big6_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study1_big6_long, .) %>%
gather(variable, rating, -(1:3)) %>%
unite(variable, perceiver, target, variable) %>%
spread(variable, rating) %>%
select(sess_id,
ends_with("agreeableness"),
ends_with("conscientiousness"),
ends_with("hp"),
ends_with("neuroticism"),
ends_with("extraversion"),
ends_with("openness")) %>%
right_join(study1)
library(kableExtra)
study1_big6_long %>%
mutate(rating_type = case_when(perceiver == target ~ "Self",
perceiver == "A" & target == "C" |
perceiver == "C" & target == "A" ~ "P1",
perceiver == "B" & target == "C" |
perceiver == "D" & target == "A" ~ "P2")) %>%
split(.$rating_type) %>%
map_df(~ psych::scoreItems(big6_keys,
items = .,
impute = "none") %>% pluck("alpha")) %>%
mutate(domain = names(big6_keys),
domain = ifelse(domain == "hp", "honesty-propriety", domain)) %>%
gather(report, alpha, -domain) %>%
mutate(report = fct_relevel(report,
"Self",
"P1",
"P2")) %>%
select(report, domain, alpha) %>%
arrange(report) %>%
knitr::kable(digits = c(NA, NA, 2),
caption = "Coefficient Alphas for Big Six Ratings Study 1",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
iri_keys <- list(
iri_empathic = c("q2_emp", "-q4_emp", "q9_emp", "-q14_emp", "-q18_emp", "q20_emp", "q22_emp"),
iri_fantasy = c("q1_fs", "q5_fs", "-q7_fs", "-q12_fs", "q16_fs", "q23_fs", "q26_fs"),
iri_distress = c("q6_pd", "q10_pd", "-q13_pd", "q17_pd", "-q19_pd", "q24_pd", "q27_pd"),
iri_perspective = c("-q3_pt", "q8_pt", "q11_pt", "-q15_pt", "q21_pt", "q25_pt", "q28_pt")
)
# Lengthen Data
study1_iri_long <-
study1 %>%
select(sess_id, starts_with("B_q"), starts_with("D_q")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study1, replacing the raw data
study1 <-
psych::scoreItems(iri_keys,
items = study1_iri_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study1_iri_long, .) %>%
gather(variable, rating, -(1:2)) %>%
unite(variable, perceiver, variable) %>%
spread(variable, rating) %>%
select(sess_id, contains("iri")) %>%
right_join(study1)
library(kableExtra)
psych::scoreItems(iri_keys,
items = study1_iri_long,
impute = "none") %>%
.[["alpha"]] %>%
as_tibble() %>%
gather(subscale, alpha) %>%
mutate(subscale =
case_when(subscale == "iri_empathic" ~ "empathic concern",
subscale == "iri_fantasy" ~ "fantasy",
subscale == "iri_distress" ~ "distress tolerance",
subscale == "iri_perspective" ~ "perspective taking")) %>%
knitr::kable(digits = c(NA, 2),
caption = "Coefficient Alphas for Perspective Taking Study 1",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
# Lengthen Data
study2_big6_long <-
study2 %>%
select(sess_id, contains("bfi")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "target", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study2, replacing the raw data
study2 <-
psych::scoreItems(big6_keys,
items = study2_big6_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study2_big6_long, .) %>%
gather(variable, rating, -(1:3)) %>%
unite(variable, perceiver, target, variable) %>%
spread(variable, rating) %>%
select(sess_id,
ends_with("agreeableness"),
ends_with("conscientiousness"),
ends_with("hp"),
ends_with("neuroticism"),
ends_with("extraversion"),
ends_with("openness")) %>%
right_join(study2)
library(kableExtra)
study2_big6_long %>%
mutate(rating_type = case_when(perceiver == target ~ "Self",
perceiver == "A" & target == "C" |
perceiver == "C" & target == "A" ~ "P1",
perceiver == "B" & target == "C" |
perceiver == "D" & target == "A" ~ "P2")) %>%
split(.$rating_type) %>%
map_df(~ psych::scoreItems(big6_keys,
items = .,
impute = "none") %>% pluck("alpha")) %>%
mutate(domain = names(big6_keys),
domain = ifelse(domain == "hp", "honesty-propriety", domain)) %>%
gather(report, alpha, -domain) %>%
mutate(report = fct_relevel(report,
"Self",
"P1",
"P2")) %>%
select(report, domain, alpha) %>%
arrange(report) %>%
knitr::kable(digits = c(NA, NA, 2),
caption = "Coefficient Alphas for Big Six Ratings Study 2",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
# Lengthen Data
study2_iri_long <-
study2 %>%
select(sess_id, starts_with("B_q"), starts_with("D_q")) %>%
gather(variable, rating, -sess_id) %>%
separate(variable,
c("perceiver", "item"),
extra = "merge") %>%
spread(item, rating)
# Score long data and bind the scores to
# the end of the long data, then widen it back out
# and call it study2, replacing the raw data
study2 <-
psych::scoreItems(iri_keys,
items = study2_iri_long,
impute = "none") %>%
.[["scores"]] %>%
cbind(study2_iri_long, .) %>%
gather(variable, rating, -(1:2)) %>%
unite(variable, perceiver, variable) %>%
spread(variable, rating) %>%
select(sess_id, contains("iri")) %>%
right_join(study2)
library(kableExtra)
psych::scoreItems(iri_keys,
items = study2_iri_long,
impute = "none") %>%
.[["alpha"]] %>%
as_tibble() %>%
gather(subscale, alpha) %>%
mutate(subscale =
case_when(subscale == "iri_empathic" ~ "empathic concern",
subscale == "iri_fantasy" ~ "fantasy",
subscale == "iri_distress" ~ "distress tolerance",
subscale == "iri_perspective" ~ "perspective taking")) %>%
knitr::kable(digits = c(NA, 2),
caption = "Coefficient Alphas for Perspective Taking Study 2",
format = "html", escape = F) %>%
kable_styling("striped", full_width = F)
# joining in target Extraversion
study1_profiles <- study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, t_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == target & perceiver == "A" |
perceiver == target & perceiver == "C") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(t_ext_cent = t_ext - mean(t_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, t_ext_cent) %>%
right_join(study1_profiles)
study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, p1_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "A" & target == "C" |
perceiver == "C" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(p1_ext_cent = p1_ext - mean(p1_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, p1_ext_cent)
# joining in P1 Extraversion
study1_profiles <- study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, p1_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "A" & target == "C" |
perceiver == "C" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(p1_ext_cent = p1_ext - mean(p1_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, p1_ext_cent) %>%
right_join(study1_profiles)
study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, p2_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "B" & target == "C" |
perceiver == "D" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(p2_ext_cent = p2_ext - mean(p2_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, p2_ext_cent)
study1_profiles <- study1 %>%
select(sess_id, ends_with("extraversion")) %>%
gather(var, p2_ext, -sess_id) %>%
separate(var, c("perceiver", "target", "variable")) %>%
filter(perceiver == "B" & target == "C" |
perceiver == "D" & target == "A") %>%
mutate(triad_id = ifelse(target == "A", "ACD", "CAB")) %>%
mutate(p2_ext_cent = p2_ext - mean(p2_ext, na.rm = TRUE)) %>%
select(sess_id, triad_id, p2_ext_cent) %>%
right_join(study1_profiles)
study1_profiles
hearsay_sam_t_ext <- lmer(p2 ~ self_norm + self_dist + eval + t_ext_cent +
t_ext_cent:self_norm + t_ext_cent:self_dist + t_ext_cent:eval +
(1 + self_norm + self_dist + t_ext_cent +
t_ext_cent:self_norm + t_ext_cent:self_dist + t_ext_cent:eval |
sess_id/triad_id),
data = study1_profiles)
summary(hearsay_sam_t_ext)
study1
study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective)
study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective) %>%
gather(var, value, -sess_id)
study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective) %>%
gather(var, value, -sess_id) %>%
separate(var, c("p2", "elim", "variable")) %>%
mutate(triad_id = ifelse(p2 == "B", "CAB", "ACD"))
study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective) %>%
gather(var, value, -sess_id) %>%
separate(var, c("p2", "elim", "variable")) %>%
mutate(triad_id = ifelse(p2 == "B", "CAB", "ACD")) %>%
spread(variable, value)
study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective) %>%
gather(var, value, -sess_id) %>%
separate(var, c("p2", "elim", "variable")) %>%
mutate(triad_id = ifelse(p2 == "B", "CAB", "ACD")) %>%
spread(variable, value) %>%
mutate(distress_cent = distress - mean(distress, na.rm = TRUE),
empathic_cent = empathic - mean(empathic, na.rm = TRUE),
fantasy_cent = fantasy - mean(fantasy, na.rm = TRUE),
perspective_cent = perspective - mean(perspective, na.rm = TRUE))%>%
select(sess_id, triad_id, distress_cent, empathic_cent,
fantasy_cent, perspective_cent)
# joining in P2 Empathy
study1_profiles <- study1 %>%
select(sess_id, B_iri_distress, B_iri_empathic, B_iri_fantasy, B_iri_perspective,
D_iri_distress, D_iri_empathic, D_iri_fantasy, D_iri_perspective) %>%
gather(var, value, -sess_id) %>%
separate(var, c("p2", "elim", "variable")) %>%
mutate(triad_id = ifelse(p2 == "B", "CAB", "ACD")) %>%
spread(variable, value) %>%
mutate(distress_cent = distress - mean(distress, na.rm = TRUE),
empathic_cent = empathic - mean(empathic, na.rm = TRUE),
fantasy_cent = fantasy - mean(fantasy, na.rm = TRUE),
perspective_cent = perspective - mean(perspective, na.rm = TRUE))%>%
select(sess_id, triad_id, distress_cent, empathic_cent,
fantasy_cent, perspective_cent) %>%
right_join(study1_profiles)
consensus_sam_distress <- lmer(p2 ~ p1_norm + p1_dist + eval + distress_cent +
distress_cent:p1_norm + distress_cent:p1_dist + distress_cent:eval +
(1 + p1_norm + p1_dist + distress_cent +
distress_cent:p1_norm + distress_cent:p1_dist + distress_cent:eval |
sess_id/triad_id),
data = study1_profiles)
consensus_sam_empathic <- lmer(p2 ~ p1_norm + p1_dist + eval + empathic_cent +
empathic_cent:p1_norm + empathic_cent:p1_dist + empathic_cent:eval +
(1 + p1_norm + p1_dist + empathic_cent +
empathic_cent:p1_norm + empathic_cent:p1_dist + empathic_cent:eval |
sess_id/triad_id),
data = study1_profiles)
integrated_profiles <- rbind(study1_profiles,
study2_profiles)
integrated_profiles
integrated_profiles
integrated_profiles <- rbind(study1_profiles,
study2_profiles)
integrated_profiles
study1_profiles
study2_profiles
integrated_profiles
